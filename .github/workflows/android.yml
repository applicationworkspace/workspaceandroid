name: Android PR workflow

on:
  push:
    branches:
      - main
      - develop
      - '*/release-*'
  pull_request:
    branches:
      - develop
      - main
      - '*/release-*'
jobs:

#  lint:
#    name: Job Lint Check
#    runs-on: ubuntu-latest
#
#    steps:
#      - uses: actions/checkout@v3
#      - name: set up JDK 11
#        uses: actions/setup-java@v3
#        with:
#          java-version: '11'
#          distribution: 'temurin'
#          cache: gradle
#
#      - name: Lint debug flavor
#        run: bash ./gradlew lintDebug --stacktrace
#      - name: Lint results
#        uses: actions/upload-artifact@v1
#        with:
#          name: lint-results
#          path: app/build/reports/lint-results-debug.html
#
#  test:
#    name: Job Unit Tests
#    runs-on: ubuntu-latest
#
#    steps:
#      - uses: actions/checkout@v3
#      - name: set up JDK 11
#        uses: actions/setup-java@v3
#        with:
#          java-version: '11'
#          distribution: 'temurin'
#          cache: gradle
#
#      - name: Unit tests
#        run: bash ./gradlew test --stacktrace
#      - name: Unit tests results
#        uses: actions/upload-artifact@v3
#        with:
#          name: unit-tests-results
#          path: app/build/reports/tests/testDebugUnitTest/index.html
#        if: always()
#  - name: Report Status
#      if: always()
#      uses: ravsamhq/notify-slack-action@v1
#      with:
#        status: ${{ job.status }}
#        notify_when: 'failure'
#      env:
#        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

  build:
    name: Job Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'
          cache: gradle

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build debug APK
        env:
          PIPELINE_RUN_NUMBER: ${{ github.run_number }}
        run: ./gradlew assembleDebug

      - run: echo "VERSION_NAME=$(${{github.workspace}}/gradlew -q printVersionInformation)" >> $GITHUB_ENV

      - name: Upload APK
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.VERSION_NAME }}.apk
          path: app/build/outputs/apk/debug/app-debug.apk
          retention-days: 1

  distribution:
    needs: [ build ]
    name: Job Distribution
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/develop'
    steps:

      - run: echo "APK_NAME=$(${{github.workspace}}/gradlew -q printVersionInformation)" >> $GITHUB_ENV
      - name: Retrieve cached artifact
        uses: actions/download-artifact@v3
        with:
          name: ${{ env.VERSION_NAME }}.apk
      - run: ls -l
      - run: pwd
      - name: Upload artifact to Firebase App Distribution
        uses: wzieba/Firebase-Distribution-Github-Action@v1
        with:
          appId: ${{secrets.FIREBASE_APP_ID}}
          serviceCredentialsFileContent: ${{ secrets.CREDENTIAL_FILE_CONTENT }}
          groups: app-testers
          releaseNotes: ${{ github.event.head_commit.message }}
          file: ./app-debug.apk

  assemble-release:
    name: Job Build Release
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v3
      - name: set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'
          cache: gradle
      - name: Assemble Release Apk
        run: ./gradlew assembleRelease
      - uses: r0adkll/sign-android-release@v1
        name: Sign app APK
        id: sign_app
        with:
          releaseDirectory: app/build/outputs/apk/release
          signingKeyBase64: ${{ secrets.KEYSTORE_FILE }}
          alias: ${{ secrets.KEY_ALIAS }}
          keyStorePassword: ${{ secrets.KEYSTORE_PASSWORD }}
          keyPassword: ${{ secrets.KEY_PASSWORD }}
      - uses: actions/upload-artifact@v2
        with:
          name: Signed app bundle
          path: ${{steps.sign_app.outputs.signedReleaseFile}}